buildscript {
    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
    }
    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
    }
}

plugins {
    id 'maven'
    id 'maven-publish'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'application'
}
apply plugin: 'maven-publish-auth'

group 'org.silverpeas.tools'
version '1.1'

sourceCompatibility = 1.8

project.configure(project) {
    if (project.version.endsWith('-SNAPSHOT')) {
        project.extensions.snapshot = true
    } else {
        project.extensions.snapshot = false
    }
}

repositories {
    mavenCentral()
    jcenter()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.kotlin
        }
    }
    repositories {
        maven {
            if (project.snapshot) {
                name 'silverpeas-snapshots'
                url 'https://www.silverpeas.org/nexus/content/repositories/snapshots/'
            } else {
                name 'silverpeas'
                url 'https://www.silverpeas.org/nexus/content/repositories/releases/'
            }
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.exposed:exposed-jdbc:0.21.1"
    compile "org.postgresql:postgresql:42.2.10"
    compile "commons-codec:commons-codec:1.14"
    compile "org.apache.commons:commons-csv:1.8"
    compile "org.slf4j:slf4j-nop:1.7.30"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

application {
    mainClassName = 'org.silverpeas.tools.anonymization.DataAnonymizerKt'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.silverpeas.tools.anonymization.DataAnonymizerKt'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task sourceJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}


